<?xml version ="1.0"?>

<robot name="Four_Wheeler_dd_robot" xmlns:xacro="http://www.ros.org/wiki/xacro">


<!--Body Dimension-->
<xacro:property name="body_link_x_dim" value="0.33"/>
<xacro:property name="body_link_y_dim" value="0.27"/>
<xacro:property name="body_link_z_dim" value="0.003"/>

<!--Wheel Dimension-->
<xacro:property name="wheel_link_radius" value="0.0485"/>
<xacro:property name="wheel_link_length" value="0.025"/>
<xacro:property name="wheel_link_z_location" value="0"/>

<!--Material Density-->
<xacro:property name="body_density" value="2710.0"/>
<xacro:property name="wheel_density" value="2710.0"/>

<xacro:property name="pi_const" value="3.14159265"/>

<!--Body Mass-->
<xacro:property name="body_mass" value="${body_density*body_link_x_dim*body_link_y_dim*body_link_z_dim}"/>
<!--Wheel Mass-->
<xacro:property name="wheel_mass" value="${wheel_density*pi_const*wheel_link_radius*wheel_link_radius*wheel_link_length}"/>

<!--Moments of Inertia of wheel (I)-->
<xacro:property name="Iz_wheel" value="${0.5*wheel_mass*wheel_link_radius*wheel_link_radius}"/>
<xacro:property name="I_wheel" value="${(1.0/12.0)*wheel_mass*(3.0*wheel_link_radius*wheel_link_radius+wheel_link_length*wheel_link_length)}"/>


<xacro:macro name="inertia_wheel">
	<inertial>
		<origin rpy="0 0 0" xyz="0 0 0"/>
		<mass value="${wheel_mass}"/>
		<inertia ixx="${I_wheel}" ixy="0.0" ixz="0.0" iyy="${I_wheel}" iyz="0" izz="${Iz_wheel}"/>
	</inertial>
</xacro:macro>

<!--<xacro:include filename="$(find ro_bot_mo_del_pkg)/urdf/rw_robot.gazebo"/>-->

<link name="base_footprint"/>

<link name="base_link">
	<visual>
		<geometry>
			<box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}" />
		</geometry>
		<origin rpy="0 0 0" xyz="0 0 0" />
	</visual>
			
	<collision>
		<geometry>
			<box size="${body_link_x_dim} ${body_link_y_dim} ${body_link_z_dim}" />
		</geometry>
		<origin rpy="0 0 0" xyz="0 0 0" />	
	</collision>	
	
	<inertial>
		<origin rpy="0 0 0" xyz="0 0 0" />
		<mass value="${body_mass}"/>
		<inertia 
		ixx="${(1/12)*body_mass*(body_link_y_dim*body_link_y_dim + body_link_z_dim*body_link_z_dim)}" ixy="0" ixz="0" iyy="${(1/12)*body_mass*(body_link_x_dim*body_link_x_dim + body_link_z_dim*body_link_z_dim)}" 
		iyz="0" izz="${(1/12)*body_mass*(body_link_y_dim*body_link_y_dim + body_link_x_dim*body_link_x_dim)}"/>
	</inertial>
</link>	

<joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link" />
    <origin xyz="0 0 0.04852" rpy="0 0 0"/>
  </joint>

<joint name="wheel1_joint" type="continuous">
	<parent link="base_link"/>
	<child link="wheel1_link"/>
	<origin xyz="0 -0.15 0" rpy="0 0 0"/>
	<axis xyz="0 1 0"/>
	<limit effort="1000" velocity="1000"/>
	<dynamics damping="1.0" friction="1.0"/>
</joint>


<link name="wheel1_link">
	<visual>
	<!-- rpy is indicating 90 degree in radian -->
		<origin rpy="1.570795 0 0" xyz="0 0 0"/>
		<geometry>
			<cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
		</geometry>
	</visual>
	
	<collision>
		<origin rpy="1.570795 0 0" xyz="0 0 0"/>
		<geometry>
			<cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
		</geometry>
	</collision>
		
	<!-- Using below macro for speedup coding, making it more compact and faster process -->
	
	<xacro:inertia_wheel />
</link>


<joint name="wheel2_joint" type="continuous">
	<parent link="base_link"/>
	<child link="wheel2_link"/>
	<origin xyz="0 0.15 0" rpy="0 0 0"/>
	<axis xyz="0 1 0"/>
	<limit effort="1000" velocity="1000"/>
	<dynamics damping="1.0" friction="1.0"/>
</joint>


<link name="wheel2_link">
	<visual>
	<!-- rpy is indicating 90 degree in radian -->
		<origin rpy="1.570795 0 0" xyz="0 0 0"/>
		<geometry>
			<cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
		</geometry>
	</visual>
	
	<collision>
		<origin rpy="1.570795 0 0" xyz="0 0 0"/>
		<geometry>
			<cylinder length="${wheel_link_length}" radius="${wheel_link_radius}"/>
		</geometry>
	</collision>
		
	<!-- Using below macro for speedup coding, making it more compact and faster process -->
	
	<xacro:inertia_wheel />
</link>

<xacro:include filename="rw_imu.xacro" />
<xacro:include filename="rw_castr.xacro" />


</robot>
